<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="KnuthrichTextBox.Text" xml:space="preserve">
    <value>Ut facilisis lacinia enim, a vulputate risus mollis sollicitudin. Aliquam lobortis, augue a condimentum bibendum, velit nisl fermentum orci, id sagittis enim ex a nisl. Sed sollicitudin imperdiet turpis, non rutrum nunc. Aenean sit amet mi metus. Nulla finibus pellentesque gravida. Nunc scelerisque malesuada purus, eget rutrum enim accumsan ut. Vestibulum volutpat velit mollis purus consequat, eu commodo ex lacinia. Vestibulum finibus augue non sapien molestie tincidunt. Donec sed pulvinar eros, sed elementum nisl. Maecenas aliquam ligula imperdiet volutpat semper. Sed non risus vehicula, ullamcorper ante mattis, lobortis nisi. Ut eget bibendum velit. Morbi quis urna vel sem interdum mattis. Phasellus et ex nisi. Vivamus sagittis fermentum pellentesque.</value>
  </data>
  <data name="HorspoolrichTextBox.Text" xml:space="preserve">
    <value>Nulla quam purus, vulputate eget tincidunt cursus, pulvinar venenatis odio. Duis eu ipsum vel nunc viverra tempus eu at justo. Donec non diam quam. In at neque at lacus efficitur viverra sit amet ac nibh. Maecenas volutpat enim sit amet dui pretium fringilla. Integer a nibh neque. Aenean at turpis aliquam nibh pharetra rutrum. Vivamus vitae ligula in dolor imperdiet porttitor. Vestibulum ac est sit amet ante consectetur fringilla. Mauris nec laoreet orci. Proin eu quam arcu. Aliquam consequat eu purus nec consequat. Nullam blandit ipsum eu nulla sodales, eu molestie nulla convallis. Pellentesque id tempus nulla. Integer pretium orci nulla.</value>
  </data>
  <data name="BoyerrichTextBox.Text" xml:space="preserve">
    <value>Vestibulum tempor ligula risus, eu elementum ex mollis at. Etiam et vestibulum metus, vel luctus velit. Etiam pellentesque maximus ipsum, at aliquet libero blandit ut. Maecenas laoreet lacus non nulla mattis, a egestas arcu sollicitudin. Sed ut pharetra diam, non eleifend sem. Phasellus euismod iaculis nisi sit amet rutrum. Suspendisse potenti. Nam purus arcu, hendrerit eu fringilla sed, ullamcorper sit amet turpis. Suspendisse potenti. Maecenas neque quam, viverra eu lacus ac, mattis imperdiet eros. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc vel nisl tincidunt ipsum pharetra malesuada in vitae ex. Mauris pulvinar velit lectus, at lobortis dolor molestie ac. Vivamus a vulputate nibh. In finibus suscipit risus sed lobortis. Aliquam feugiat interdum vestibulum.</value>
  </data>
</root>